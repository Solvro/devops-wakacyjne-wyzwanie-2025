apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-config
data:
  APP_MODE: "production"
  LOG_LEVEL: "info"
  nginx.conf: |
    server {
    listen 80;
    server_name localhost;
    location / {
    root /usr/share/nginx/html;
    index index.html;
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: webapp-secrets
type: Opaque
stringData:
  DB_USERNAME: "admin"
  DB_PASSWORD: "SuperSecret123"
  API_KEY: "sk-1234567890abcdef"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: nginx:latest
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: webapp-config
            - secretRef:
                name: webapp-secrets
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: secret-volume
              mountPath: /etc/secrets
              readOnly: true

          startupProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 30

      volumes:
        - name: config-volume
          configMap:
            name: webapp-config
        - name: secret-volume
          secret:
            secretName: webapp-secrets

---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  selector:
    app: webapp
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30020 ## ? not sure ?
  type: NodePort
